const s=`{% block multi_describe_card %} <sw-card :title="$tc('multi-describe.card.title')"> <div v-if="product && customFieldSet && salesChannels.length > 0"> <sw-tabs position="left"> <sw-tabs-item v-for="salesChannel in salesChannels" :key="salesChannel.id" :name="salesChannel.id" :title="salesChannel.translated.name"> <div v-for="field in customFieldSet.customFields" v-if="field.name.endsWith(salesChannel.id)"> <sw-field :key="field.name" :label="field.config.label[$store.state.adminLocale.currentLocale]" v-if="product.customFields"> <sw-text-editor v-model="product.customFields[field.name]"> </sw-text-editor> </sw-field> </div> </sw-tabs-item> </sw-tabs> </div> <sw-empty-state v-else :title="$tc('multi-describe.card.noData')"></sw-empty-state> </sw-card> {% endblock %}`;Shopware.Component.register("multi-describe-card",{template:s,inject:["repositoryFactory"],props:{product:{type:Object,required:!0},salesChannels:{type:Array,required:!0}},computed:{customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")}},data(){return{customFieldSet:null}},created(){this.loadCustomFieldSet()},methods:{loadCustomFieldSet(){const e=new Shopware.Data.Criteria;e.addFilter(Shopware.Data.Criteria.equals("name","multi_describe_set")),e.addAssociation("customFields"),this.customFieldSetRepository.search(e,Shopware.Context.api).then(t=>{this.customFieldSet=t.first()})},getFieldName(e,t){return`description_${e}_${t}`}}});const a='{% block multi_describe_detail_tab %} <multi-describe-card :product="product" :salesChannels="salesChannels"> </multi-describe-card> {% endblock %}';Shopware.Component.register("multi-describe-detail-tab",{template:a,inject:["repositoryFactory"],computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},data(){return{salesChannels:[]}},created(){this.loadSalesChannels()},methods:{loadSalesChannels(){this.salesChannelRepository.search(new Shopware.Data.Criteria,Shopware.Context.api).then(e=>{this.salesChannels=e})}}});Shopware.Component.override("sw-product-detail",{computed:{productTabs(){const e=this.$super("productTabs");return e.push({name:"multi-describe",label:"multi-describe.tabTitle",component:"multi-describe-detail-tab"}),e}}});
//# sourceMappingURL=multi-describe-CAE9BKzz.js.map
